<project name="build-brainfarm-flash" default="build-flash" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<property file="build.properties"/>
	
	<taskdef resource="flexTasks.tasks" classpath="flexTasks.jar" />

	<taskdef resource="org/apache/ivy/ant/antlib.xml"
	         uri="antlib:org.apache.ivy.ant" 
			 classpath="${ivy.lib}.jar"/>
	
	<target name="retrieve" unless="library.installed" description="Retrieves the libraries if needed">

		<ivy:settings file="ivysettings.xml"/>
		<ivy:resolve file="ivy.xml" conf="default"/>
		<ivy:retrieve pattern="../lib/[artifact].swc" conf="default"/>
	
	</target>
	
	<target name="build-flash" description="builds the flash library swc.">
			
		<compc output="${output.dir}/${output.name}.swc"
		   optimize="true"
		   debug="true"
		>
			<include-sources dir="${src.dir}">
                 <include name="**/*.as"/>
            </include-sources>
			<compiler.source-path path-element="${basedir}/${src.dir}"/>
			<compiler.external-library-path dir="../lib" append="true">
				<include name="*.swc" />
			</compiler.external-library-path>
		</compc>
		
	</target>
		
	<target name="build-tests" description="builds the test suite and runs tests">
		
		<ant target="clean-tests"/>
		<ant target="prepare-tests"/>
		<ant target="build-core-tests"/>
		<ant target="build-ai-tests"/>
		<ant target="build-multiplayer-tests"/>
		
	</target>
	
	<target name="generate-docs" depends="clean-docs, prepare-docs" description="creates the asdoc documentation for the project">
		
		<exec executable="${asdoc}" failonerror="true" >
		  <arg line="-doc-sources ../src" />
		  <arg line="-external-library-path ../lib/prana.swc" />
		  <arg line="-output ../docs" />
		  <arg line="-main-title 'ActionEngine API Documentation'"/>
		  <arg line="-window-title 'ActionEngine API Documentation'"/>
		</exec>
		
	</target>
	
	<target name="prepare" description="prepares the directory system before a build">
		
		<ant target="prepare-output"/>
		<ant target="prepare-docs"/>
		<ant target="prepare-tests"/>
		
	</target>
	
	<target name="prepare-output" description="prepares the output directory">
		
		<mkdir dir="${output.dir}"/>
		
	</target>
	
	<target name="prepare-docs" description="prepares the documentation directory">
		
		<mkdir dir="${docs.dir}"/>
		
	</target>
	
	<target name="prepare-tests" description="prepares the tests directory">
			
		<mkdir dir="${test.output.dir}"/>
		<mkdir dir="${test.output.dir}/assets"/>
		
	</target>
	
	<target name="clean" description="cleans the directory system of all directories/files created by a build">
		
		<ant target="clean-docs"/>
		<ant target="clean-output"/>
		<ant target="clean-tests"/>
		
	</target>
	
	<target name="clean-docs" description="cleans the documentation directory">
		
		<delete failonerror="no" includeemptydirs="true">
			<fileset dir="${docs.dir}" includes="**/*" />
		</delete>
		
	</target>
	
	<target name="clean-output" description="cleans the output directory">
		
		<delete failonerror="no" includeemptydirs="true">
			<fileset dir="${output.dir}" includes="**/*" />
		</delete>
		
	</target>
	
	<target name="clean-tests" description="cleans the tests directory">
			
		<delete failonerror="no" includeemptydirs="true">
			<fileset dir="${test.output.dir}" includes="**/*" />
		</delete>
		
	</target>
	
</project>